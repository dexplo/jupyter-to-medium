{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Jupyter to Medium \u00b6 Publish Jupyter Notebooks as Medium blog posts directly from your notebook with the help of jupyter_to_medium. Watch the video to learn how jupyter_to_medium works! \u00b6 Target User \u00b6 Do you... Publish blog posts on Medium? Use Jupyter Notebooks to write your posts? Dislike the time and effort it takes to transfer your posts from Jupyter to Medium? If so, jupyter_to_medium will automate the process of taking your Jupyter Notebook as is and publishing it as a Medium post in almost no time at all, saving huge amounts of time. Motivation \u00b6 I've published dozens of blog posts on Medium myself, all of them beginning as Jupyter Notebooks. Manually converting them to Medium posts was a lengthy, painstaking process. One particularly painful process was inserting tables, which Medium does not support, into my posts. Nearly all of my posts contain numerous pandas DataFrames ( such as this one , which has 40! DataFrames) which are represented as HTML tables within a notebook. I'd have to take screenshots of each one to insert them into my Medium posts. Installation \u00b6 pip install jupyter_to_medium Get an Integration Token from Medium \u00b6 Before using this package, you must request an integration token from Medium. Read the instructions here on how to get your integration token . Save your integration token \u00b6 Once you have your integration token, create the following folder and file in your home directory. . jupyter_to_medium / integration_token If you don't save it to this file, you'll need to access it every time you make a new post. Usage \u00b6 There are three ways to publish notebooks: Within an active notebook From the command line Using a Python script Publishing to Medium within a Notebook \u00b6 After installation, open the notebook you wish to publish and select the option File -> Deploy as -> Medium Post Note The extension should be automatically activated in your notebook, but if the above command is not found, run the following from your command line. jupyter bundlerextension enable --py jupyter_to_medium._bundler --sys-prefix A new browser tab will open with a short form that needs to be completed. After clicking publish, the notebook and all images will be uploaded to Medium. Any HTML tables (such as pandas DataFrames) will be converted to images (via chrome or matplotlib), as Medium has no ability to represent tables. This is a time consuming process, so be prepared to wait. Check your terminal for updates. If successful, you'll get the following response with a link to view the post. Click the link to view the post. Finalize and publish on Medium \u00b6 Currently, your post will be published as a draft. Review and publish the post on Medium. Publishing to Medium from the Command Line \u00b6 Upon installation, you'll have access to the command line program jupyter_to_medium with the same options as the below function. jupyter_to_medium --pub-name = \"Dunder Data\" --tags = \"python, data science\" \"My Awesome Blog Post.ipynb\" Publishing to Medium with a Python Script \u00b6 In a separate script/notebook, import juptyer_to_medium as a module. Pass the publish function the location of the Jupyter Notebook you would like to publish as a Medium blog post. import jupyter_to_medium as jtm jtm . publish ( 'My Awesome Jupyter Notebook.ipynb' , integration_token = None , pub_name = None , title = None , tags = None , publish_status = 'draft' , notify_followers = False , license = 'all-rights-reserved' , canonical_url = None , chrome_path = None , save_markdown = False , table_conversion = 'chrome' ) If successful, a message will be printed with the URL to your post. Additionally, JSON data will be returned as a dictionary containing the returned request from Medium. Troubleshooting \u00b6 If your post is unsuccessful, a message with the error will be printed to the screen with information that might help you solve the issue. Table conversion with Chrome or Matplotlib \u00b6 By default, tables will be converted via Chrome web browser by taking screenshots of them. If you don't have Chrome installed or cannot get chrome to work, select 'matplotlib' for the table conversion. Dependencies \u00b6 nbconvert requests pillow (if you have HTML tables) Google Chrome / Brave browser matplotlib (if Chrome browser does not work)","title":"Home"},{"location":"#jupyter-to-medium","text":"Publish Jupyter Notebooks as Medium blog posts directly from your notebook with the help of jupyter_to_medium.","title":"Jupyter to Medium"},{"location":"#watch-the-video-to-learn-how-jupyter_to_medium-works","text":"","title":"Watch the video to learn how jupyter_to_medium works!"},{"location":"#target-user","text":"Do you... Publish blog posts on Medium? Use Jupyter Notebooks to write your posts? Dislike the time and effort it takes to transfer your posts from Jupyter to Medium? If so, jupyter_to_medium will automate the process of taking your Jupyter Notebook as is and publishing it as a Medium post in almost no time at all, saving huge amounts of time.","title":"Target User"},{"location":"#motivation","text":"I've published dozens of blog posts on Medium myself, all of them beginning as Jupyter Notebooks. Manually converting them to Medium posts was a lengthy, painstaking process. One particularly painful process was inserting tables, which Medium does not support, into my posts. Nearly all of my posts contain numerous pandas DataFrames ( such as this one , which has 40! DataFrames) which are represented as HTML tables within a notebook. I'd have to take screenshots of each one to insert them into my Medium posts.","title":"Motivation"},{"location":"#installation","text":"pip install jupyter_to_medium","title":"Installation"},{"location":"#get-an-integration-token-from-medium","text":"Before using this package, you must request an integration token from Medium. Read the instructions here on how to get your integration token .","title":"Get an Integration Token from Medium"},{"location":"#save-your-integration-token","text":"Once you have your integration token, create the following folder and file in your home directory. . jupyter_to_medium / integration_token If you don't save it to this file, you'll need to access it every time you make a new post.","title":"Save your integration token"},{"location":"#usage","text":"There are three ways to publish notebooks: Within an active notebook From the command line Using a Python script","title":"Usage"},{"location":"#publishing-to-medium-within-a-notebook","text":"After installation, open the notebook you wish to publish and select the option File -> Deploy as -> Medium Post Note The extension should be automatically activated in your notebook, but if the above command is not found, run the following from your command line. jupyter bundlerextension enable --py jupyter_to_medium._bundler --sys-prefix A new browser tab will open with a short form that needs to be completed. After clicking publish, the notebook and all images will be uploaded to Medium. Any HTML tables (such as pandas DataFrames) will be converted to images (via chrome or matplotlib), as Medium has no ability to represent tables. This is a time consuming process, so be prepared to wait. Check your terminal for updates. If successful, you'll get the following response with a link to view the post. Click the link to view the post.","title":"Publishing to Medium within a Notebook"},{"location":"#finalize-and-publish-on-medium","text":"Currently, your post will be published as a draft. Review and publish the post on Medium.","title":"Finalize and publish on Medium"},{"location":"#publishing-to-medium-from-the-command-line","text":"Upon installation, you'll have access to the command line program jupyter_to_medium with the same options as the below function. jupyter_to_medium --pub-name = \"Dunder Data\" --tags = \"python, data science\" \"My Awesome Blog Post.ipynb\"","title":"Publishing to Medium from the Command Line"},{"location":"#publishing-to-medium-with-a-python-script","text":"In a separate script/notebook, import juptyer_to_medium as a module. Pass the publish function the location of the Jupyter Notebook you would like to publish as a Medium blog post. import jupyter_to_medium as jtm jtm . publish ( 'My Awesome Jupyter Notebook.ipynb' , integration_token = None , pub_name = None , title = None , tags = None , publish_status = 'draft' , notify_followers = False , license = 'all-rights-reserved' , canonical_url = None , chrome_path = None , save_markdown = False , table_conversion = 'chrome' ) If successful, a message will be printed with the URL to your post. Additionally, JSON data will be returned as a dictionary containing the returned request from Medium.","title":"Publishing to Medium with a Python Script"},{"location":"#troubleshooting","text":"If your post is unsuccessful, a message with the error will be printed to the screen with information that might help you solve the issue.","title":"Troubleshooting"},{"location":"#table-conversion-with-chrome-or-matplotlib","text":"By default, tables will be converted via Chrome web browser by taking screenshots of them. If you don't have Chrome installed or cannot get chrome to work, select 'matplotlib' for the table conversion.","title":"Table conversion with Chrome or Matplotlib"},{"location":"#dependencies","text":"nbconvert requests pillow (if you have HTML tables) Google Chrome / Brave browser matplotlib (if Chrome browser does not work)","title":"Dependencies"},{"location":"whats_new/","text":"What's New? \u00b6 Version 0.1 - Released June 25, 2020 \u00b6 Option to choose matplotlib to create pandas DataFrame images Better capturing large DataFrames Using matplotlib to create pandas DataFrames \u00b6 Some users don't have chrome installed (or cannot get chrome to take screenshots) and therefore were unable to convert pandas DataFrames to images. This is solved in version 0.1 with the option to use matplotlib instead. The images will look slightly different than the screenshots taken by chrome, but should provide a good alternative. Initial Release - June 2, 2020 \u00b6","title":"What's New"},{"location":"whats_new/#whats-new","text":"","title":"What's New?"},{"location":"whats_new/#version-01-released-june-25-2020","text":"Option to choose matplotlib to create pandas DataFrame images Better capturing large DataFrames","title":"Version 0.1 - Released June 25, 2020"},{"location":"whats_new/#using-matplotlib-to-create-pandas-dataframes","text":"Some users don't have chrome installed (or cannot get chrome to take screenshots) and therefore were unable to convert pandas DataFrames to images. This is solved in version 0.1 with the option to use matplotlib instead. The images will look slightly different than the screenshots taken by chrome, but should provide a good alternative.","title":"Using matplotlib to create pandas DataFrames"},{"location":"whats_new/#initial-release-june-2-2020","text":"","title":"Initial Release - June 2, 2020"}]}